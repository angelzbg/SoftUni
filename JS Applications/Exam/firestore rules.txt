rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /destinations/{destinationId} {
    allow get, list: if request.auth != null;
    allow create:
      if request.auth != null
      && request.resource.data.keys().hasOnly([
        'name',
        'city',
        'duration',
        'departure',
        'imageUrl',
        'creator'
      ])
      && request.resource.data.keys().size() == 6
      && request.resource.data['creator'] == request.auth.uid
      && request.resource.data['name'] is string
      && request.resource.data['name'].size() > 0
      && request.resource.data['duration'] is int
      && int(request.resource.data['duration']) > 0
      && int(request.resource.data['duration']) < 101
      && request.resource.data['city'] is string
      && request.resource.data['city'].size() > 0
      && request.resource.data['departure'] is string
      && request.resource.data['departure'].size() > 0 // ne pishe za validaciq na datata
      && request.resource.data['imageUrl'] is string
      && request.resource.data['imageUrl'].size() > 0;

    allow delete:
      if request.auth != null
      && request.auth.uid == resource.data['creator'];

    allow update:
      if request.auth != null
      &&
           request.auth.uid == resource.data['creator']
        && resource.data.diff(request.resource.data).affectedKeys().hasOnly([
        'name',
        'city',
        'duration',
        'departure',
        'imageUrl'
      ])
      && request.resource.data['name'] is string
      && request.resource.data['name'].size() > 0
      && request.resource.data['duration'] is int
      && int(request.resource.data['duration']) > 0
      && int(request.resource.data['duration']) < 101
      && request.resource.data['city'] is string
      && request.resource.data['city'].size() > 0
      && request.resource.data['departure'] is string
      && request.resource.data['departure'].size() > 0 // ne pishe za validaciq na datata
      && request.resource.data['imageUrl'] is string
      && request.resource.data['imageUrl'].size() > 0;
    } // match /destinations/{destinationId}
  } // match /databases/{database}/documents
} // service cloud.firestore